name: Convert and Rename Resume

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  convert-and-rename:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository content
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm init -y
          npm install marked puppeteer

      - name: Create conversion script
        run: |
          cat > convert.js << 'EOL'
          const fs = require("fs");
          const marked = require("marked");
          const puppeteer = require("puppeteer");
          
          const css = `
            <style>
              :root {
                --content-length: 0;
                --scale-factor: 1;
              }
              
              body {
                font-family: Arial, sans-serif;
                line-height: 1.4;
                max-width: 800px;
                margin: 10px auto;
                padding: 5px;
                font-size: calc(10pt * var(--scale-factor));
              }
              
              h1 {
                color: #2c3e50;
                margin: 0;
                padding: 0;
                font-size: calc(24pt * var(--scale-factor));
                text-align: center;
              }
              
              .contact-info {
                text-align: center;
                margin-top: calc(5px * var(--scale-factor));
                margin-bottom: calc(15px * var(--scale-factor));
              }
              
              h2, h3 {
                color: #2c3e50;
                margin-top: calc(0.5em * var(--scale-factor));
                font-size: calc(12.5pt * var(--scale-factor));
              }
              
              a {
                color: #3498db;
                text-decoration: none;
              }
              
              a:hover {
                text-decoration: underline;
              }
              
              ul, ol {
                padding-left: calc(1.5em * var(--scale-factor));
              }
              
              li {
                margin: calc(0.25em * var(--scale-factor)) 0;
              }
              
              p {
                margin: calc(0.25em * var(--scale-factor)) 0;
              }
              
              code {
                background: #f8f9fa;
                padding: calc(0.1em * var(--scale-factor)) calc(0.2em * var(--scale-factor));
                border-radius: calc(3px * var(--scale-factor));
                font-family: monospace;
                font-size: calc(8.75pt * var(--scale-factor));
              }
              
              pre {
                background: #f8f9fa;
                padding: calc(0.5em * var(--scale-factor));
                border-radius: calc(5px * var(--scale-factor));
                overflow-x: auto;
                font-size: calc(8.75pt * var(--scale-factor));
              }
              
              blockquote {
                border-left: calc(4px * var(--scale-factor)) solid #3498db;
                margin: calc(0.5em * var(--scale-factor)) 0;
                padding-left: calc(0.5em * var(--scale-factor));
                color: #666;
              }
              
              table {
                border-collapse: collapse;
                width: 100%;
                margin: calc(0.5em * var(--scale-factor)) 0;
              }
              
              th, td {
                border: calc(1px * var(--scale-factor)) solid #ddd;
                padding: calc(4px * var(--scale-factor));
                text-align: left;
              }
              
              th {
                background-color: #f8f9fa;
              }
            </style>
          `;
          
          async function convert() {
            const md = fs.readFileSync("Resume.md", "utf8");
            
            // Extract name from the first line
            const nameMatch = md.match(/^# NAME: (.*)$/m);
            if (!nameMatch) {
              throw new Error("Could not find name in Resume.md. First line should be '# NAME: Your Name'");
            }
            const name = nameMatch[1].trim();
            const pdfFilename = `${name.replace(/\s+/g, "_")}_Resume.pdf`;
            
            // Remove the NAME line from the markdown for display and wrap contact info in a div
            const displayMd = md.replace(/^# NAME: .*$/m, `# ${name}`)
                              .replace(/<p align="center">(.*?)<\/p>/s, '<div class="contact-info">$1</div>');
            const html = marked.parse(displayMd);
            
            const fullHtml = `<!DOCTYPE html>
              <html>
                <head>
                  <meta charset="utf-8">
                  ${css}
                </head>
                <body>
                  ${html}
                </body>
              </html>`;
            
            fs.writeFileSync("temp.html", fullHtml);
            
            const browser = await puppeteer.launch({
              headless: "new",
              args: ["--no-sandbox", "--disable-setuid-sandbox"]
            });
            const page = await browser.newPage();
            
            await page.setJavaScriptEnabled(true);
            
            await page.setViewport({
              width: 1200,
              height: 800,
              deviceScaleFactor: 2
            });
            
            await page.goto(`file://${process.cwd()}/temp.html`, {
              waitUntil: "networkidle0"
            });
            
            // Calculate content length and adjust scale factor
            await page.evaluate(() => {
              const content = document.body;
              const header = content.querySelector('h1').nextElementSibling;
              const mainContent = content.cloneNode(true);
              
              // Remove header for content measurement
              mainContent.removeChild(mainContent.querySelector('h1'));
              mainContent.removeChild(mainContent.querySelector('.contact-info'));
              
              const headerHeight = header.offsetHeight;
              const contentHeight = mainContent.scrollHeight;
              const pageHeight = 1122; // A4 height in pixels at 96 DPI
              const targetHeight = (pageHeight * 2) - headerHeight; // Target height for content
              
              // Calculate initial scale factor
              let scaleFactor = targetHeight / contentHeight;
              
              // Apply scale factor and check if it fits
              content.style.setProperty('--scale-factor', scaleFactor);
              
              // Fine-tune the scale factor
              const checkFit = () => {
                const newContentHeight = mainContent.scrollHeight;
                const totalHeight = headerHeight + newContentHeight;
                
                if (totalHeight > pageHeight * 2) {
                  scaleFactor *= 0.98; // Reduce by 2% for finer control
                  content.style.setProperty('--scale-factor', scaleFactor);
                  return checkFit();
                }
                return scaleFactor;
              };
              
              return checkFit();
            });
            
            await page.pdf({
              path: pdfFilename,
              format: "A4",
              margin: {
                top: "10mm",
                right: "20mm",
                bottom: "20mm",
                left: "20mm"
              },
              printBackground: true,
              preferCSSPageSize: true,
              displayHeaderFooter: false
            });
            
            await browser.close();
            fs.unlinkSync("temp.html");
          }
          
          convert();
          EOL

      - name: Convert MD to PDF
        run: node convert.js

      - name: Commit changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add -f *_Resume.pdf
          git commit -m "Update resume PDF"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
